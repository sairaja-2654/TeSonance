# -*- coding: utf-8 -*-
"""Copy of Week1a.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1WJQifj4g8Wm1Hbg7-XPHBzV_T1_mSjgO

ML MODEL

Import libraries
"""

import pandas as pd
import numpy as np
import datetime
import matplotlib
import matplotlib.pyplot as plt
import nltk

"""# LOADING THE DATASET"""

#loading the dataset
df = pd.read_csv("D:\\miniproject\\final mini\\binary_with_artist.csv", low_memory=False)
#df = pd.read_csv("binary.csv", low_memory=False)
df.head()

df.columns

y=df.mood #mood of song
X=df.drop(['index', 'name ', 'mood', 'year', 'artist', 'lyrics'], axis=1)

#dividing the dataset into 80:20 ratio
from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2)

from sklearn.linear_model import LogisticRegression
from sklearn.svm import SVC
from sklearn.metrics import classification_report, accuracy_score, confusion_matrix

logistic_model = LogisticRegression(multi_class='multinomial', solver='lbfgs', max_iter=1000)
logistic_model.fit(X_train, y_train)

# Predict on the test data
y_pred_logistic = logistic_model.predict(X_test)

# Evaluate Logistic Regression model
print("Logistic Regression Results:")
print(f"Accuracy: {accuracy_score(y_test, y_pred_logistic)}")
print(classification_report(y_test, y_pred_logistic))
print("Confusion Matrix:")
print(confusion_matrix(y_test, y_pred_logistic))

# Step 2: Train Support Vector Machine (SVM) model
svm_model = SVC(kernel='linear')  # Linear kernel for simplicity
svm_model.fit(X_train, y_train)

# Predict on the test data
y_pred_svm = svm_model.predict(X_test)

# Evaluate SVM model
print("\nSVM Results:")
print(f"Accuracy: {accuracy_score(y_test, y_pred_svm)}")
print(classification_report(y_test, y_pred_svm))
print("Confusion Matrix:")
print(confusion_matrix(y_test, y_pred_svm))



# Save the models (optional)
import pickle
with open('logistic_model.pkl', 'wb') as f:
    pickle.dump(logistic_model, f)
with open('svm_model.pkl', 'wb') as f:
    pickle.dump(svm_model, f)

from sklearn.model_selection import cross_val_score

# Logistic Regression with Cross-Validation
logistic_model = LogisticRegression(multi_class='multinomial', solver='lbfgs', max_iter=1000, class_weight='balanced')
scores = cross_val_score(logistic_model, X, y, cv=5, scoring='accuracy')
print(f"Cross-Validation Accuracy for Logistic Regression: {scores.mean()}")

# SVM with Cross-Validation
svm_model = SVC(kernel='linear', class_weight='balanced')
scores_svm = cross_val_score(svm_model, X, y, cv=5, scoring='accuracy')
print(f"Cross-Validation Accuracy for SVM: {scores_svm.mean()}")

